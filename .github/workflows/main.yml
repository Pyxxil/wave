# This is a basic workflow to help you get started with Actions

name: Deploy to Production

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
    push:
        branches: [master]
    pull_request:
        branches: [master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    # This workflow contains a single job called "build"
    build:
        # The type of runner that the job will run on
        runs-on: ubuntu-latest

        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - uses: actions/checkout@v2

            - name: Cache multiple paths
              uses: actions/cache@v2
              with:
                  path: |
                      **/node_modules
                  key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

            - name: Install SSH
              run: which ssh-agent || (apt update -y && apt install openssh-client -y)

            - name: Install rsync
              run: which rsync || (apt update -y && apt install rsync -y)

            - name: Run SSH agent
              run: eval $(ssh-agent -s)

            - name: Add SSH keys
              run: echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' | ssh-add -

            - name: Create SSH directory with permissions
              run: |
                  mkdir -p ~/.ssh
                  chmod 700 ~/.ssh

            - name: Scan keys from the server
              run: |
                  ssh-keyscan ${{ secrets.SERVER_IP }}
                  chmod 644 ~/.ssh/known_hosts

            - name: Deploy
              run: |
                  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal --default-toolchain nightly
                  source $HOME/.cargo/env
                  curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
                  yarn install --frozen-lockfile
                  yarn build
                  rsync -hrvz --delete -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" build gitlab@${{ secrets.SERVER_IP }}:/var/www/wave/
